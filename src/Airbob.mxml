<?xml version="1.0" encoding="utf-8"?>
<mx:WindowedApplication 
	xmlns:mx="http://www.adobe.com/2006/mxml"
	xmlns:control="be.nascom.airbob.control.*" 
	xmlns:view="be.nascom.airbob.view.*" 
	xmlns:business="be.nascom.airbob.business.*"
	xmlns:chrome="be.nascom.airbob.view.components.*"
	title="Airbob"	
	layout="absolute" 
	closeEffect="fadeOut"	
	showEffect="fadeIn"
	showStatusBar="false"		
	showGripper="true"
	gripperPadding="7"
	showTitleBar="false"
	borderStyle="none"
	backgroundAlpha="0"
	doubleClickEnabled="true"
	creationComplete="init()">
	
	<control:AppController id="controller" />
	<business:Services id="services"/>
	
	<mx:Script>
		<![CDATA[
			import flash.net.navigateToURL;
			import be.nascom.airbob.events.LoadConfigEvent;
			import mx.logging.Log;
			import mx.logging.ILogger;
			import be.nascom.airbob.vo.ServerConfig;
			import be.nascom.airbob.events.LoadProjectsEvent;
			import be.nascom.airbob.commands.LoadProjectsCommand;
			import com.adobe.cairngorm.model.ModelLocator;
			import be.nascom.airbob.model.AppModelLocator;
			
			private static var logger:ILogger = Log.getLogger("Airbob");
			
			[Bindable]
			private var model:AppModelLocator = AppModelLocator.getInstance();	
			
			private var background:AirbobBackground;
			private var maximized:Boolean = false;
			
			/**
			 * Init the app
			 */
			private function init():void 
			{	
				// Init background
				background = new AirbobBackground();			
				bgContainer.addChild(background);
				resizeBackground();
				
				// Add the event listsners for systray
		    	addEventListener(Event.ADDED, prepareForSystray);
		    	addEventListener(Event.CLOSING, closingApplication);			    			    				    			    	
		    			    		    			    			    
		  	}
		  	
		  	override protected function updateDisplayList(unscaledWidth:Number, unscaledHeight:Number):void 
		  	{
				super.updateDisplayList(unscaledWidth, unscaledHeight);
				resizeBackground();
			}
		  	
		  	private function resizeBackground():void 
		  	{
				try 
				{					
					background.width = bgContainer.width;
					background.height = bgContainer.height;
				} 
				catch (error:Error) 
				{
					logger.debug(error.toString());
				}
			}
		  	
		  	public function prepareForSystray(event:Event):void 
		  	{	
		  											
				if (NativeApplication.supportsSystemTrayIcon)
				{
					setSystemTrayProperties();
					SystemTrayIcon(NativeApplication.nativeApplication.icon).menu = createSystrayRootMenu();	
					NativeApplication.nativeApplication.icon.bitmaps = [model.trayIcon];				
				} 
				else if (NativeApplication.supportsDockIcon) 
				{
				    // For mac systems we can set the Dock menu
				    DockIcon(NativeApplication.nativeApplication.icon).menu = createSystrayRootMenu();				
				}														
			}	
			
			private function createSystrayRootMenu():NativeMenu 
			{
				var menu:NativeMenu = new NativeMenu();
				var openNativeMenuItem:NativeMenuItem = new NativeMenuItem("Show");
				openNativeMenuItem.addEventListener(Event.SELECT, undock);
				menu.addItem(openNativeMenuItem);
				
				var aboutNativeMenuItem:NativeMenuItem = new NativeMenuItem("About");
				aboutNativeMenuItem.addEventListener(Event.SELECT, openAbout);
				menu.addItem(aboutNativeMenuItem);
				
				if (NativeApplication.supportsSystemTrayIcon)
				{
					var exitNativeMenuItem:NativeMenuItem = new NativeMenuItem("Exit");
					exitNativeMenuItem.addEventListener(Event.SELECT, closeApp);
					menu.addItem(new NativeMenuItem("",true));
					menu.addItem(exitNativeMenuItem);
				}
				
				return menu;
			}
			
			private function setSystemTrayProperties():void 
			{
				SystemTrayIcon(NativeApplication.nativeApplication.icon).tooltip = "Airbob says: " + model.state;
				SystemTrayIcon(NativeApplication.nativeApplication.icon).addEventListener(MouseEvent.CLICK, undock);				    	     		
			}
			
			private function nwMinimized(displayStateEvent:NativeWindowDisplayStateEvent):void 
			{
				if(displayStateEvent.afterDisplayState == NativeWindowDisplayState.MINIMIZED) 
				{
					displayStateEvent.preventDefault();
					dock();
				} 
			}
			
			public function dock():void  
			{
				stage.nativeWindow.visible = false;
				NativeApplication.nativeApplication.icon.bitmaps = [model.trayIcon];
			}	
			
			public function openAbout(event:Event):void 
			{
//				stage.nativeWindow.visible = true;	
//				stage.nativeWindow.orderToFront();				
//				model.selectedView = AppModelLocator.VIEW_PREFERENCES;
				navigateToURL(new URLRequest('http://airbob.googlecode.com'))
			}
			
			/**
			 * Show the application again and remove the application icon from the systray
			 */
			public function undock(event:Event):void 
			{
				stage.nativeWindow.visible = true;	
				stage.nativeWindow.orderToFront();
				
				model.selectedView = AppModelLocator.VIEW_DASHBOARD;
			}
			
			private function closingApplication(event:Event):void 
			{	
				logger.debug("Closing application");			
				if (NativeApplication.supportsSystemTrayIcon)
				{
					event.preventDefault();
					dock();		
				} 
				else 
				{
					closeApp(event);
				}
			}				
			
			private function closeApp(event:Event):void 
			{
				stage.nativeWindow.close();
			}		
			
			/**
			 * Custom chrome beaviour foe max/restore 
			 **/
			private function doMaxRestore():void 
			{
				if (maximized) 
				{
					restore();
					maximized = false;			
				} 
				else 
				{
					maximize();
					maximized = true;
				}
			}	
		]]>
	</mx:Script>
	
	<mx:Style source="../assets/skin/airbob_skins.css" />
	
	<mx:Style >
		@font-face {
		 	src:url("../assets/skin/airbob_fonts.swf"); 
		 	fontFamily: "EN Moist";
		 	fontWeight:normal;
		}	
		@font-face {
		 	src:url("../assets/skin/airbob_fonts.swf"); 
		 	fontFamily: "Helvetica 35 Thin";
		} 			
		@font-face {
		 	src:url("../assets/skin/airbob_fonts.swf"); 
		 	fontFamily: "Helvetica 65 Medium";
		} 
		@font-face {
		 	src:url("../assets/skin/airbob_fonts.swf"); 
		 	fontFamily: "Helvetica 65 Medium";
		 	fontWeight:bold;
		} 			
		
	</mx:Style>	
	
	<mx:UIComponent id="bgContainer" width="100%" height="100%"/>
	<mx:VBox width="100%" height="100%" >
		<mx:Spacer height="0.5" width="100%"/>
		<mx:HBox id="fakeTitleBar" height="25" width="100%" horizontalAlign="right" horizontalGap="1">			
			<mx:Canvas mouseDown="nativeWindow.startMove()" doubleClick="doMaxRestore()" width="100%" height="25" />
			<chrome:WindowControlMinimize click="minimize()"/>
			<!--<chrome:WindowControlMaximize click="doMaxRestore() "/>-->
			<chrome:WindowControlExit click="close()"/>
			<mx:Spacer width="2.5"/>
		</mx:HBox> 
		
		<mx:ViewStack id="viewStack" selectedIndex="{model.selectedView}" width="100%" height="100%">		
			<view:DashboardView id="dashboardView" width="100%" height="100%"/>
			<view:ConfigView id="preferencesView" width="100%" height="100%"/>		
		</mx:ViewStack>		
		
		<mx:Canvas width="100%">
			<mx:Canvas right="20" width="70" height="20" click="navigateToURL(new URLRequest('http://www.nascom.be'))" buttonMode="true" mouseChildren="false"/>	
		</mx:Canvas>
		
		
	</mx:VBox>	
	
</mx:WindowedApplication>
